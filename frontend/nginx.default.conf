# CQL Code Clinic Frontend Server Configuration
server {
    listen 3000;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;
    
    # Security headers specific to this server
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' ws: wss:; object-src 'none';" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Enable compression for this server
    gzip_static on;
    
    # Security: Don't allow access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Security: Don't allow access to backup files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Static assets with long cache
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # CORS for fonts and assets
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Range";
        
        # Rate limiting for static assets
        limit_req zone=static burst=50 nodelay;
        limit_conn conn_limit_per_ip 10;
        
        # Handle missing files gracefully
        try_files $uri =404;
    }
    
    # Service worker with special caching
    location /sw.js {
        expires off;
        add_header Cache-Control "public, max-age=0, must-revalidate";
        add_header Service-Worker-Allowed "/";
        try_files $uri =404;
    }
    
    # Manifest file
    location /manifest.json {
        expires 1d;
        add_header Cache-Control "public";
        try_files $uri =404;
    }
    
    # API proxy (if needed for development)
    location /api/ {
        # Rate limiting for API calls
        limit_req zone=api burst=20 nodelay;
        limit_conn conn_limit_per_ip 5;
        
        # Proxy to backend
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    
    # WebSocket proxy for real-time features
    location /ws/ {
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific settings
        proxy_read_timeout 86400;  # 24 hours
        proxy_send_timeout 86400;  # 24 hours
    }
    
    # Main application - SPA routing
    location / {
        # Security headers for HTML
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        
        # Cache HTML files briefly
        expires 5m;
        add_header Cache-Control "public, must-revalidate";
        
        # Rate limiting for main app
        limit_req zone=static burst=30 nodelay;
        limit_conn conn_limit_per_ip 10;
        
        # SPA fallback - serve index.html for all routes
        try_files $uri $uri/ /index.html;
    }
    
    # Error pages
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # Monitoring and metrics endpoint (for internal use)
    location /nginx_status {
        stub_status on;
        access_log off;
        
        # Restrict access to internal networks only
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
}

# Redirect HTTP to HTTPS (when behind a reverse proxy)
server {
    listen 80;
    server_name _;
    
    # Health check for load balancers
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}