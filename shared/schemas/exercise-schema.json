{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://cql-code-clinic.com/schemas/exercise-schema.json",
  "title": "CQL Code Clinic Exercise Schema",
  "description": "JSON Schema for defining CQL learning exercises in the Code Clinic platform",
  "type": "object",
  "required": [
    "id",
    "version", 
    "title",
    "description",
    "difficulty",
    "type",
    "content",
    "files",
    "validation"
  ],
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique identifier for the exercise",
      "pattern": "^[a-z0-9-]+$",
      "minLength": 3,
      "maxLength": 50,
      "examples": ["whitespace-comments", "operators-basics", "case-sensitivity"]
    },
    "version": {
      "type": "string",
      "description": "Semantic version of the exercise",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "examples": ["1.0.0", "2.1.3"]
    },
    "title": {
      "type": "string",
      "description": "Human-readable title of the exercise",
      "minLength": 5,
      "maxLength": 100,
      "examples": ["Whitespace and Comments", "CQL Operators", "Case-Sensitivity Rules"]
    },
    "description": {
      "type": "string",
      "description": "Brief description of what the exercise teaches",
      "minLength": 10,
      "maxLength": 500,
      "examples": ["Learn about whitespace handling and comment syntax in CQL"]
    },
    "difficulty": {
      "type": "string",
      "enum": ["beginner", "intermediate", "advanced", "expert"],
      "description": "Difficulty level of the exercise"
    },
    "estimatedTime": {
      "type": "integer",
      "description": "Estimated completion time in minutes",
      "minimum": 1,
      "maximum": 180,
      "default": 15
    },
    "prerequisites": {
      "type": "array",
      "description": "List of exercise IDs that should be completed before this one",
      "items": {
        "type": "string",
        "pattern": "^[a-z0-9-]+$"
      },
      "uniqueItems": true,
      "maxItems": 10
    },
    "concepts": {
      "type": "array",
      "description": "CQL concepts and skills taught by this exercise",
      "items": {
        "type": "string",
        "enum": [
          "syntax", "whitespace", "comments", "identifiers", "keywords",
          "literals", "operators", "expressions", "functions", "types",
          "variables", "definitions", "libraries", "includes", "parameters",
          "contexts", "queries", "logic", "comparisons", "arithmetic",
          "strings", "dates", "quantities", "intervals", "lists",
          "tuples", "clinical-data", "terminologies", "value-sets",
          "code-systems", "debugging", "performance", "best-practices",
          "library", "define", "integers", "booleans", "fhir", "patient",
          "conditions", "observations", "filtering", "demographics", "clinical-status",
          "existence", "diagnoses", "medications", "adherence", "calculations",
          "pharmaceuticals", "lab-results", "trends", "decision-support",
          "quality-measures", "populations", "clinical-logic", "measurement",
          "aggregates", "performance-measurement"
        ]
      },
      "uniqueItems": true,
      "minItems": 1,
      "maxItems": 10
    },
    "tags": {
      "type": "array",
      "description": "Additional tags for categorization and search",
      "items": {
        "type": "string",
        "minLength": 2,
        "maxLength": 30,
        "pattern": "^[a-z0-9-]+$"
      },
      "uniqueItems": true,
      "maxItems": 15
    },
    "type": {
      "type": "string",
      "enum": ["tutorial", "practice", "challenge", "debug", "build", "assessment"],
      "description": "Type of exercise - determines UI and validation behavior"
    },
    "content": {
      "type": "object",
      "description": "Educational content for the exercise",
      "required": ["instructions"],
      "properties": {
        "instructions": {
          "type": "string",
          "description": "Main instructional content in Markdown format",
          "minLength": 50,
          "maxLength": 10000
        },
        "background": {
          "type": "string",
          "description": "Optional background information in Markdown format",
          "maxLength": 5000
        },
        "hints": {
          "type": "array",
          "description": "Progressive hints to help users complete the exercise",
          "items": {
            "type": "object",
            "required": ["level", "text"],
            "properties": {
              "level": {
                "type": "integer",
                "description": "Hint level (1=gentle nudge, 5=detailed solution)",
                "minimum": 1,
                "maximum": 5
              },
              "text": {
                "type": "string",
                "description": "Hint text in Markdown format",
                "minLength": 10,
                "maxLength": 1000
              },
              "condition": {
                "type": "string",
                "description": "Optional condition when this hint should be shown",
                "maxLength": 500
              }
            }
          },
          "maxItems": 10
        },
        "resources": {
          "type": "array",
          "description": "Additional learning resources and references",
          "items": {
            "type": "object",
            "required": ["title", "url"],
            "properties": {
              "title": {
                "type": "string",
                "minLength": 5,
                "maxLength": 100
              },
              "url": {
                "type": "string",
                "format": "uri",
                "description": "URL to external resource"
              },
              "type": {
                "type": "string",
                "enum": ["documentation", "video", "article", "specification", "example"],
                "default": "documentation"
              }
            }
          },
          "maxItems": 10
        }
      }
    },
    "files": {
      "type": "array",
      "description": "Code files associated with the exercise",
      "minItems": 1,
      "maxItems": 10,
      "items": {
        "type": "object",
        "required": ["name", "template"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the file (usually ends with .cql)",
            "pattern": "^[a-zA-Z0-9_-]+\\.(cql|txt|md)$",
            "examples": ["test.cql", "library.cql", "README.md"]
          },
          "template": {
            "type": "string",
            "description": "Initial code template for the exercise",
            "maxLength": 20000
          },
          "solution": {
            "type": "string",
            "description": "Reference solution for validation and comparison",
            "maxLength": 20000
          },
          "readonly": {
            "type": "boolean",
            "description": "Whether this file is read-only (for reference)",
            "default": false
          },
          "hidden": {
            "type": "boolean",
            "description": "Whether this file is hidden initially",
            "default": false
          },
          "language": {
            "type": "string",
            "enum": ["cql", "markdown", "text", "json"],
            "description": "Programming language for syntax highlighting",
            "default": "cql"
          }
        }
      }
    },
    "validation": {
      "type": "object",
      "description": "Validation rules and criteria for exercise completion",
      "required": ["strategy"],
      "properties": {
        "strategy": {
          "type": "string",
          "enum": ["exact-match", "pattern-match", "semantic-match", "custom-function", "execution-result"],
          "description": "Validation strategy to determine exercise completion"
        },
        "exactMatch": {
          "type": "object",
          "description": "Configuration for exact string matching",
          "properties": {
            "ignoreWhitespace": {
              "type": "boolean",
              "default": true
            },
            "ignoreCase": {
              "type": "boolean", 
              "default": false
            },
            "ignoreComments": {
              "type": "boolean",
              "default": true
            }
          }
        },
        "patterns": {
          "type": "array",
          "description": "Regular expressions that must match the user's code",
          "items": {
            "type": "object",
            "required": ["pattern", "description"],
            "properties": {
              "pattern": {
                "type": "string",
                "description": "Regular expression pattern"
              },
              "description": {
                "type": "string",
                "description": "Human-readable description of what this pattern validates"
              },
              "required": {
                "type": "boolean",
                "default": true,
                "description": "Whether this pattern is required for completion"
              },
              "points": {
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "default": 10,
                "description": "Points awarded for matching this pattern"
              }
            }
          }
        },
        "customValidator": {
          "type": "string",
          "description": "JavaScript function code for custom validation logic",
          "maxLength": 10000
        },
        "testCases": {
          "type": "array",
          "description": "Test cases for execution-based validation",
          "items": {
            "type": "object",
            "required": ["description", "expectedOutput"],
            "properties": {
              "description": {
                "type": "string",
                "maxLength": 200
              },
              "input": {
                "type": "object",
                "description": "Input parameters for the CQL execution"
              },
              "expectedOutput": {
                "description": "Expected execution result"
              },
              "tolerance": {
                "type": "number",
                "description": "Tolerance for numeric comparisons",
                "default": 0
              }
            }
          }
        },
        "allowedErrors": {
          "type": "array",
          "description": "Error patterns that are acceptable for partial credit",
          "items": {
            "type": "string",
            "maxLength": 500
          },
          "maxItems": 10
        },
        "timeLimit": {
          "type": "integer",
          "description": "Maximum execution time in seconds",
          "minimum": 1,
          "maximum": 30,
          "default": 10
        },
        "passingScore": {
          "type": "integer",
          "description": "Minimum score (0-100) required to pass the exercise",
          "minimum": 0,
          "maximum": 100,
          "default": 70
        }
      }
    },
    "feedback": {
      "type": "object",
      "description": "Feedback messages and error explanations",
      "properties": {
        "success": {
          "type": "string",
          "description": "Message shown when exercise is completed successfully",
          "maxLength": 500,
          "default": "Excellent work! You've successfully completed this exercise."
        },
        "partial": {
          "type": "string",
          "description": "Message shown for partial completion",
          "maxLength": 500
        },
        "failure": {
          "type": "string", 
          "description": "Message shown when exercise is not completed",
          "maxLength": 500
        },
        "commonErrors": {
          "type": "array",
          "description": "Common error patterns and their explanations",
          "items": {
            "type": "object",
            "required": ["pattern", "explanation"],
            "properties": {
              "pattern": {
                "type": "string",
                "description": "Error pattern (regex or string)"
              },
              "explanation": {
                "type": "string",
                "description": "User-friendly explanation of the error",
                "maxLength": 1000
              },
              "suggestion": {
                "type": "string",
                "description": "Suggested fix for the error",
                "maxLength": 500
              },
              "example": {
                "type": "string",
                "description": "Example of correct code",
                "maxLength": 500
              }
            }
          },
          "maxItems": 20
        },
        "progressFeedback": {
          "type": "array",
          "description": "Contextual feedback based on user progress",
          "items": {
            "type": "object",
            "required": ["condition", "message"],
            "properties": {
              "condition": {
                "type": "string",
                "description": "Condition that triggers this feedback"
              },
              "message": {
                "type": "string",
                "description": "Feedback message",
                "maxLength": 500
              },
              "priority": {
                "type": "integer",
                "minimum": 1,
                "maximum": 10,
                "default": 5,
                "description": "Priority for displaying this feedback"
              }
            }
          }
        }
      }
    },
    "analytics": {
      "type": "object",
      "description": "Analytics and tracking configuration",
      "properties": {
        "trackingEnabled": {
          "type": "boolean",
          "description": "Whether to collect analytics for this exercise",
          "default": true
        },
        "events": {
          "type": "array",
          "description": "Custom events to track for this exercise",
          "items": {
            "type": "string",
            "enum": ["start", "complete", "hint-used", "error-encountered", "reset", "time-limit-exceeded", "code-run"]
          },
          "uniqueItems": true
        },
        "metadata": {
          "type": "object",
          "description": "Additional metadata for analytics",
          "properties": {
            "learningObjectives": {
              "type": "array",
              "items": { "type": "string" }
            },
            "clinicalDomain": {
              "type": "string",
              "examples": ["general", "cardiology", "pharmacy", "quality-measures"]
            }
          }
        }
      }
    },
    "metadata": {
      "type": "object",
      "description": "Additional metadata about the exercise",
      "properties": {
        "author": {
          "type": "string",
          "description": "Exercise author name",
          "maxLength": 100
        },
        "authorEmail": {
          "type": "string",
          "format": "email",
          "description": "Author contact email"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Exercise creation timestamp"
        },
        "modified": {
          "type": "string",
          "format": "date-time", 
          "description": "Last modification timestamp"
        },
        "source": {
          "type": "string",
          "description": "Original source of the exercise (e.g., 'CQF Tutorial', 'Cooking with CQL')",
          "maxLength": 100
        },
        "license": {
          "type": "string",
          "description": "License for the exercise content",
          "default": "CC-BY-4.0"
        },
        "language": {
          "type": "string",
          "description": "Primary language of the exercise content",
          "default": "en-US"
        },
        "reviewStatus": {
          "type": "string",
          "enum": ["draft", "review", "approved", "deprecated"],
          "default": "draft"
        },
        "qualityScore": {
          "type": "number",
          "description": "Automated quality score (0-100)",
          "minimum": 0,
          "maximum": 100
        }
      }
    }
  },
  "additionalProperties": false
}